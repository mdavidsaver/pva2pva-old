# .travis.yml for use with EPICS Base ci-scripts
# (see: https://github.com/epics-base/ci-scripts)

# This is YAML - indentation levels are crucial

language: cpp
compiler: gcc
dist: bionic

cache:
  directories:
  - $HOME/.cache

env:
  global:
    - SETUP_PATH=.ci-local:.ci

addons:
  apt:
    packages:
    # for all EPICS builds
    - libreadline6-dev
    - libncurses5-dev
    - perl
    # for clang compiler
    - clang
    # for mingw builds (32bit and 64bit)
    - g++-mingw-w64-i686
    - g++-mingw-w64-x86-64
    # for RTEMS cross builds
    - qemu-system-x86

install:
  - ./.ci/travis/prepare.sh

script:
  - ./.ci/travis/build.sh

# If you need to do more during install and build,
# add a local directory to your module and do e.g.
#  - ./.ci-local/travis/install-extras.sh

# Define build jobs

# Well-known variables to use
# SET      source setup file
# EXTRA    content will be added to make command line
# STATIC   set to YES for static build (default: NO)
# TEST     set to NO to skip running the tests (default: YES)
# VV       set to make build scripts verbose (default: unset)

# Usually from setup files, but may be specified or overridden
#  on a job line
# MODULES  list of dependency modules
# BASE     branch or release tag name of the EPICS Base to use
# <MODULE> branch or release tag for a specific module
# ...      see README for setup file syntax description

jobs:
  include:

# Different configurations of default gcc and clang

  - env: BASE=vfield

  - env: BASE=vfield
    compiler: clang

  - env: BASE=vfield EXTRA="CMD_CXXFLAGS=-std=c++11"

  - env: BASE=vfield EXTRA="CMD_CXXFLAGS=-std=c++11"
    compiler: clang

# Trusty: compiler versions very close to RHEL 7

  - env: BASE=vfield
    dist: trusty

  - env: BASE=vfield EXTRA="CMD_CXXFLAGS=-std=c++11"
    dist: trusty

# Cross-compilations to Windows using MinGW and WINE
    
  - env: BASE=vfield WINE=32 TEST=NO STATIC=YES
    compiler: mingw

  - env: BASE=vfield WINE=64 TEST=NO STATIC=NO
    compiler: mingw

# Other gcc versions (added as an extra package)

  - env: BASE=vfield
    compiler: gcc-6
    addons: { apt: { packages: ["g++-6"], sources: ["ubuntu-toolchain-r-test"] } }

  - env: BASE=vfield
    compiler: gcc-7
    addons: { apt: { packages: ["g++-7"], sources: ["ubuntu-toolchain-r-test"] } }

# MacOS build

  - env: BASE=vfield
    os: osx
    compiler: clang
    addons: { homebrew: { packages: ["re2c"], update: true } }
